<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Description</title>
</head>
<body>
    <h1>Upload an Image for Description</h1>
    <input type="file" id="imageInput" accept="image/*">
    <button onclick="describeImage()">Describe Image</button>
    <div id="result"></div>

    <script type="module">
        import { OpenAI } from "openai";

        async function describeImage() {
            const imageInput = document.getElementById('imageInput');
            if (imageInput.files.length === 0) {
                alert('Please upload an image first.');
                return;
            }

            const file = imageInput.files[0];
            const reader = new FileReader();

            reader.onload = async function(event) {
                const base64String = event.target.result.split(',')[1]; // Get base64 data only

                // Set up the API client
                const client = new OpenAI({
                    baseURL: "https://api-inference.huggingface.co/v1/",
                    apiKey: "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" // Replace with your API key
                });

                try {
                    // Send the request to the model
                    const chatCompletion = await client.chat.completions.create({
                        model: "meta-llama/Llama-3.2-11B-Vision-Instruct",
                        messages: [
                            {
                                role: "user",
                                content: [
                                    {
                                        type: "text",
                                        text: "Describe this image in one sentence."
                                    },
                                    {
                                        type: "image",
                                        image: {
                                            data: base64String,
                                            mime_type: file.type
                                        }
                                    }
                                ]
                            }
                        ],
                        max_tokens: 500
                    });

                    // Display the response
                    document.getElementById('result').innerText = chatCompletion.choices[0].message.content;

                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while processing the image.');
                }
            };

            reader.readAsDataURL(file);
        }
    </script>
</body>
</html>
