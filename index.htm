<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat with API</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .chat-box {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }
        .messages {
            border: 1px solid #ccc;
            padding: 10px;
            height: 300px;
            overflow-y: auto;
            margin-bottom: 10px;
            background: #f9f9f9;
        }
        .messages p {
            margin: 5px 0;
        }
        .user-message {
            color: blue;
        }
        .bot-message {
            color: green;
        }
    </style>
</head>
<body>
    <div class="chat-box">
        <h1>Chat with the API</h1>
        <div class="messages" id="messages"></div>
        <input type="text" id="userInput" placeholder="Type your message here..." style="width: 80%; padding: 10px;">
        <button onclick="sendMessage()" style="padding: 10px;">Send</button>
    </div>

    <script>
        const apiKey = "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";
        const apiUrl = "https://api-inference.huggingface.co/v1/models/Qwen/Qwen2.5-Coder-32B-Instruct";

        async function sendMessage() {
            const userInput = document.getElementById("userInput").value;
            if (!userInput.trim()) return;

            const messagesContainer = document.getElementById("messages");

            // Display the user's message
            const userMessage = document.createElement("p");
            userMessage.textContent = `You: ${userInput}`;
            userMessage.classList.add("user-message");
            messagesContainer.appendChild(userMessage);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;

            // Clear the input field
            document.getElementById("userInput").value = "";

            try {
                // Make API request
                const response = await fetch(apiUrl, {
                    method: "POST",
                    headers: {
                        "Authorization": `Bearer ${apiKey}`,
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        inputs: [{
                            role: "user",
                            content: userInput
                        }],
                        parameters: {
                            max_new_tokens: 500
                        }
                    })
                });

                const result = await response.json();

                // Display the bot's response
                const botMessage = document.createElement("p");
                const botContent = result.choices[0]?.message?.content || "No response from the bot.";
                botMessage.textContent = `Bot: ${botContent}`;
                botMessage.classList.add("bot-message");
                messagesContainer.appendChild(botMessage);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            } catch (error) {
                console.error("Error interacting with the API:", error);
                const errorMessage = document.createElement("p");
                errorMessage.textContent = "Bot: An error occurred. Please try again later.";
                errorMessage.classList.add("bot-message");
                messagesContainer.appendChild(errorMessage);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }
        }
    </script>
</body>
</html>
